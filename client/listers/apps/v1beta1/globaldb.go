// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/ysicing/cloudflow-api/apps/v1beta1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// GlobalDBLister helps list GlobalDBs.
// All objects returned here must be treated as read-only.
type GlobalDBLister interface {
	// List lists all GlobalDBs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.GlobalDB, err error)
	// GlobalDBs returns an object that can list and get GlobalDBs.
	GlobalDBs(namespace string) GlobalDBNamespaceLister
	GlobalDBListerExpansion
}

// globalDBLister implements the GlobalDBLister interface.
type globalDBLister struct {
	indexer cache.Indexer
}

// NewGlobalDBLister returns a new GlobalDBLister.
func NewGlobalDBLister(indexer cache.Indexer) GlobalDBLister {
	return &globalDBLister{indexer: indexer}
}

// List lists all GlobalDBs in the indexer.
func (s *globalDBLister) List(selector labels.Selector) (ret []*v1beta1.GlobalDB, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.GlobalDB))
	})
	return ret, err
}

// GlobalDBs returns an object that can list and get GlobalDBs.
func (s *globalDBLister) GlobalDBs(namespace string) GlobalDBNamespaceLister {
	return globalDBNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// GlobalDBNamespaceLister helps list and get GlobalDBs.
// All objects returned here must be treated as read-only.
type GlobalDBNamespaceLister interface {
	// List lists all GlobalDBs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.GlobalDB, err error)
	// Get retrieves the GlobalDB from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1beta1.GlobalDB, error)
	GlobalDBNamespaceListerExpansion
}

// globalDBNamespaceLister implements the GlobalDBNamespaceLister
// interface.
type globalDBNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all GlobalDBs in the indexer for a given namespace.
func (s globalDBNamespaceLister) List(selector labels.Selector) (ret []*v1beta1.GlobalDB, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.GlobalDB))
	})
	return ret, err
}

// Get retrieves the GlobalDB from the indexer for a given namespace and name.
func (s globalDBNamespaceLister) Get(name string) (*v1beta1.GlobalDB, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta1.Resource("globaldb"), name)
	}
	return obj.(*v1beta1.GlobalDB), nil
}
